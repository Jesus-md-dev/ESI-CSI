package es.uca.gii.csi20.mdj.data;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.Properties;

import es.uca.gii.csi20.mdj.util.Config;

public class Data {
	
    public static String getPropertiesUrl() { return "./db.properties"; }
	
    public static Connection Connection() throws Exception {
	
        try {
            Properties properties = Config.Properties(getPropertiesUrl());
            return DriverManager.getConnection(
                properties.getProperty("jdbc.url"),
                properties.getProperty("jdbc.username"),
                properties.getProperty("jdbc.password"));
       }
       catch (Exception ee) { throw ee; }
	}
    
    @SuppressWarnings("deprecation")
	public static void LoadDriver() 
        throws InstantiationException, IllegalAccessException, 
        ClassNotFoundException, IOException {
			
            Class.forName(Config.Properties(Data.getPropertiesUrl()
            ).getProperty("jdbc.driverClassName")).newInstance();
    }
    
    public static String String2Sql(String sString, boolean bAddQuotes, boolean bAddWildcards ) {
    	sString = sString.replace("'","''");
    	
    	if(bAddWildcards) sString = "%" + sString + "%";    	
    	if(bAddQuotes) sString = "'" + sString + "'";
    	
    	return sString;
    }
    
    public static int Boolean2Sql(boolean bBool) {
    	if(b)
    		return 1;
    	else
    		return 0;
    }
    
    /**
     * @param con
     * @return
     * @throws Exception
     */
    public static int LastId(Connection con) throws Exception {
    	ResultSet rs = null;
    	
    	try {
    		Properties properties = Config.Properties(getPropertiesUrl());
    		rs = con.createStatement().executeQuery(properties.getProperty("jdbc.lastIdSentence"));
    		rs.next();
    		
    		return rs.getInt("LAST_INSERT_ID()");
    	}
    	catch (Exception ee) { throw ee; }
    	finally {
    		if(rs != null) rs.close();
    	}
    }
    
}